ADDENDUM for ALN (since version 1.11)

ALN now takes 68K BSD object files (like those output by GCC).
(MADMAC needs -fb option in order to output BSD object files).
This allows input of symbols of any length.
It also outputs COFF encapsulated BSD programs (only in absolute).
This allows output of symbols of any length, source level and other things.
It understands DBX source-level informations optionally generated by MADMAC
(with the -g option) and GCC (with the -g option). THIS ONLY WORKS with BSD
OBJECTS! So you must use the -fb option with MADMAC.

ALN can also use SYMDEFed BSD libraries, like those created with "ar cs <fname>".

Some switches have been added:
	-? Prints usage.
	-e Output COFF encapsulated BSD programs (only in absolute).
	-g Output source-level (if present in input object files).
	-ii Same as -i without truncating symbols to 8 characters.
	-n# where n is {2,4,8}. This outputs EPROM files *.r0 to *.r(#-1)
		with byte 0 in .r0, byte 1 in .r1, etc ...
	-r<size>: Section alignment size.
		-w: word (2 bytes)
		-l: long (4 bytes)
		-p: phrase (8 bytes, default alignment)
		-d: double phrase (16 bytes)
		-q: quad phrase (32 bytes)

ALN now creates 3 internal variables:
	_TEXT_E points right after the last byte of TEXT section.
	_DATA_E points right after the last byte of DATA section.
	_BSS_E points right after the last byte of BSS section.
	Common variables are considered part of the BSS section for _BSS_E.

